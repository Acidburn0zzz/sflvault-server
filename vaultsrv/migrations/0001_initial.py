# Generated by Django 2.0.2 on 2018-02-08 18:19

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=255, verbose_name='Company department')),
                ('pubkey', models.TextField(verbose_name='Public key')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_hidden', models.BooleanField(default=False)),
                ('pubkey', models.TextField()),
            ],
            options={
                'verbose_name': 'Account group',
                'verbose_name_plural': 'Account groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='vaultsrv.Account')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False)),
                ('cryptgroupkey', models.TextField(verbose_name='Cryptography group key')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vaultsrv.Account')),
                ('account_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vaultsrv.AccountGroup')),
            ],
            options={
                'verbose_name': 'Group membership',
                'verbose_name_plural': 'Group memberships',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('url', models.URLField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, help_text='Accept JSON format')),
                ('notes', models.TextField(blank=True, null=True)),
                ('secret', models.TextField(help_text="Service's password")),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='ServiceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateField(auto_now_add=True)),
                ('fqdn', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name or domain')),
                ('ip', models.CharField(blank=True, help_text='IP address of the server', max_length=39, null=True)),
                ('location', models.CharField(blank=True, help_text='Physical place', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_groups', to='vaultsrv.Customer')),
            ],
            options={
                'verbose_name': 'Service group',
                'verbose_name_plural': 'Service groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceGroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cryptsymkey', models.TextField(verbose_name='Cryptography sym key')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_group_memberships', to='vaultsrv.AccountGroup')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_group_memberships', to='vaultsrv.Service')),
            ],
            options={
                'verbose_name': 'Service group membership',
                'verbose_name_plural': 'Service group memberships',
                'ordering': ['service'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The group this service belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='vaultsrv.ServiceGroup'),
        ),
        migrations.AddField(
            model_name='service',
            name='service_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='vaultsrv.ServiceGroup'),
        ),
        migrations.AddField(
            model_name='account',
            name='groups',
            field=models.ManyToManyField(related_name='accounts', through='vaultsrv.GroupMembership', to='vaultsrv.AccountGroup'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
